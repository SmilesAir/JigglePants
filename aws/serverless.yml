# serverless.yml
service: JigglePants

plugins:
  - serverless-plugin-dynamo-autoscaling

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  stage: ${opt:stage, "development"}

  environment:
    JIGGLE_DATA: ${self:service}-${self:provider.stage}-jiggleDataTable

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.JIGGLE_DATA}"

functions:
  reportData:
    handler: source/reportData.handler
    events:
      - http:
          path: userId/{userId}/sessionId/{sessionId}/reportData
          method: post
          cors: true
  getData:
    handler: source/getData.handler
    events:
      - http:
          path: sessionId/{sessionId}/lastTime/{lastTime}/getData
          method: get
          cors: true

resources:
  Resources:
    jiggleDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.JIGGLE_DATA}
        AttributeDefinitions:
          - AttributeName: sessionId
            AttributeType: S
          - AttributeName: time
            AttributeType: N
        KeySchema:
          - AttributeName: sessionId
            KeyType: HASH
          - AttributeName: time
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  autoscaling:
    - table: jiggleDataTable
      read:
        minimum: 1
        maximum: 1000
        usage: .75
      write:
        minimum: 1
        maximum: 100
        usage: .75
